from Crypto.Util.number import *
from gmpy2 import next_prime

def loop_next_prime(p):
	for i in range(5000):
		p = next_prime(p)
	q = p
	return q

flag = b"EQCTF{<REDACTED>}"

p = getPrime(1024)
q = loop_next_prime(p)

N = int(p*q)
e = 65537

C = pow(bytes_to_long(flag),e,N)

print(f"{N=}")
print(f"{e=}")
print(f"{C=}")

# N=14587704432822344892341272427282646120364434437414523883376089608218979364959927948590898540264210246449374363014541914863792835772986609660515612532877044074684115597786182642011407163350289201826895454398548254854919237599957739718174053771619150887665707867636064460914489445835497948439951659044458159773886454887057327846897569977945202458245268351728125973721764332352011029125694046428350269451464778793326007087955043888570293765138721335344787054343738337660927131968049415376352589981259058448540690666004751490375493430556965591293772542601776934892741235532054785639594081598607404023545471998403197674267
# e=65537
# C=7329184746351979600304810893726842767688467204256990201181172159445966473650977905122553415838916142690364388789400790015517642902297387406215773278164829517035052625373870964570981590734714495297149889660019174034119566329569798047522829383224123884562703447321306836996392334132844673471179765556339187200820259655159008340673516040862000226792914228312336356120448967504158288031247387263438925257977725844911872753683719735641011693324441777888582417108481882731436005780409094974241968759397096299213838515746566064813787517925040756180508206242396925444425306180593790729890681708626826056328684043890127100581